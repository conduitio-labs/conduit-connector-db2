// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package config

import (
	"github.com/conduitio/conduit-commons/config"
)

const (
	ConfigBatchSize      = "batchSize"
	ConfigColumns        = "columns"
	ConfigConnection     = "connection"
	ConfigOrderingColumn = "orderingColumn"
	ConfigPrimaryKeys    = "primaryKeys"
	ConfigSnapshot       = "snapshot"
	ConfigTable          = "table"
)

func (Config) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		ConfigBatchSize: {
			Default:     "1000",
			Description: "BatchSize is a size of rows batch.",
			Type:        config.ParameterTypeInt,
			Validations: []config.Validation{
				config.ValidationGreaterThan{V: 0},
				config.ValidationLessThan{V: 100001},
			},
		},
		ConfigColumns: {
			Default:     "",
			Description: "Columns  list of column names that should be included in each Record's payload.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigConnection: {
			Default:     "",
			Description: "Connection string connection to DB2 database.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigOrderingColumn: {
			Default:     "",
			Description: "OrderingColumn is a name of a column that the connector will use for ordering rows.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
				config.ValidationLessThan{V: 129},
			},
		},
		ConfigPrimaryKeys: {
			Default:     "",
			Description: "PrimaryKeys list of column names should use for their `Key` fields.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{},
		},
		ConfigSnapshot: {
			Default:     "true",
			Description: "Snapshot whether or not the plugin will take a snapshot of the entire table before starting cdc.",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		ConfigTable: {
			Default:     "",
			Description: "Table is a name of the table that the connector should write to or read from.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
				config.ValidationLessThan{V: 129},
			},
		},
	}
}
